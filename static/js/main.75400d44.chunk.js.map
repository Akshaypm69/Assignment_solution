{"version":3,"sources":["Newfolder.js","folder/folderparticle.js","folder/folder.js","breadcrumb.js","App.js","reportWebVitals.js","index.js"],"names":["NewFolder","props","useState","click","setclick","id","name","foldersid","files","folderdetails","setfolderdetails","useContext","Breadcontext","bread","setbread","foldernew","className","onClick","eevent","preventDefault","concat","history","push","Fragment","type","placeholder","value","onChange","event","folder","target","FolderParticle","ondelete","Folder","setfiles","filename","setfilename","deletehandler","prevfiles","filter","file","clickhandler","match","url","filelist","map","f","e","Bread","children","React","createContext","App","links","to","Provider","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75400d44.chunk.js","sourcesContent":["import React, {useState,useContext}from 'react'\r\nimport {Breadcontext} from './App'\r\nimport './newfolder.css'\r\nconst  NewFolder = (props) => {\r\n\r\n\r\n    \r\n    const [ click, setclick] = useState (false);\r\n  \r\n    const [ folderdetails, setfolderdetails ] = useState ({\r\n      id:\"\",\r\n      name:\"\",\r\n      foldersid:[],\r\n      files:[]\r\n    });\r\n    \r\n    const {bread,setbread} =useContext(Breadcontext);\r\n    \r\n\r\n    const namehandler = (event)=>{\r\n      const folder = {...folderdetails}\r\n      folder.id=event.target.value;\r\n      folder.name=event.target.value;\r\n      setfolderdetails(folder)\r\n    }\r\n  \r\n    const createhandler = (event) => {\r\n      event.preventDefault();\r\n      setclick(true)\r\n    }\r\n  \r\n    const enterfolderhandler =(eevent)=>{\r\n        eevent.preventDefault();\r\n        setbread(bread.concat(folderdetails.id))\r\n       props.history.push('/'+folderdetails.id)\r\n        \r\n    }\r\n\r\n  let foldernew=click?\r\n      <div className=\"created-folder\">\r\n          {folderdetails.id}\r\n          <hr/>\r\n        <button onClick={enterfolderhandler}>Enter</button>\r\n        \r\n    </div>:null \r\n  \r\n    \r\n\r\n\r\n\r\nreturn(\r\n<React.Fragment>\r\n    <div className=\"main\">\r\n        <div className=\"creatorbox\">\r\n            <h1>Create a new folder</h1>\r\n            <input type=\"text\" placeholder=\"enter folder name\" value={folderdetails.name} onChange={namehandler}/>\r\n             <div className=\"button-container\">\r\n                 <button>cancel</button>\r\n                 <button onClick={createhandler}>create</button>\r\n             </div> \r\n        </div>\r\n        {foldernew}\r\n    </div>\r\n\r\n \r\n</React.Fragment>\r\n)\r\n\r\n};\r\nexport default NewFolder;","import  React from 'react'\r\nimport './folder.css'\r\nconst FolderParticle = (props) => {\r\n\r\nreturn (\r\n    <div onClick={()=>props.onClick(props.id)} className=\"folderparticle\">\r\n\r\n    {props.name}\r\n    <button onClick={()=>props.ondelete(props.id)}>Delete</button>\r\n    {/* <button onClick={()=>props.onedit(props.id)}>Edit</button> */}\r\n    </div>\r\n)\r\n\r\n\r\n};\r\nexport default FolderParticle;","import React, {  useState } from 'react'\r\nimport './folder.css'\r\nimport Folderparticle from './folderparticle'\r\nconst Folder = (props) => {\r\n\r\n\r\nconst [files,setfiles] = useState([]);\r\n\r\nconst [filename,setfilename] = useState('')\r\n\r\n// const [click,setclick] = useState(false);\r\n\r\nconst createfilehandler = (e) => {\r\n\r\ne.preventDefault();\r\n\r\nsetfiles(files.concat({id:filename,name:filename}))\r\n\r\n}\r\nconst setname = (event) => {\r\n\r\n    setfilename(event.target.value);\r\n    \r\n    }\r\n\r\nconst deletehandler = (id) =>{\r\n   \r\n    setfiles(prevfiles => prevfiles.filter(file => file.id!==id))\r\n };\r\n// let file;\r\n// let editbox;\r\n//  const edithandler =(id)=>{\r\n\r\n//     setclick(true);\r\n//      file=files.find(f=>f.id===id);\r\n//      editbox=click?\r\n//     <div classname=\"edit\">\r\n//     <input value={file.name} onChange={setname}/>\r\n//     </div>:null;\r\n   \r\n//  }\r\n\r\nconst clickhandler = (id)=>{\r\nprops.history.push(props.match.url+'/'+id)\r\n\r\n}\r\n\r\n\r\nlet filelist=files.map((f)=>{\r\nreturn(\r\n  <Folderparticle key={f.id}\r\n name={f.name} \r\n id={f.id} \r\n ondelete={deletehandler}\r\n onClick={clickhandler}\r\n // onedit={edithandler}\r\n />\r\n)})\r\n\r\n\r\n\r\n\r\nreturn <React.Fragment>\r\n    \r\n<div className=\"folder-page\">\r\n\r\n        <div className=\"creatorbox\">\r\n                <h1>Enter the file name</h1>\r\n             <input type=\"text\" placeholder=\"Enter file name\" onChange={setname} value={filename}/>\r\n             <button onClick={createfilehandler}>CREATE</button>\r\n        </div>\r\n{/* {editbox} */}\r\n        <div className=\"folder-display\">\r\n             {filelist}\r\n        </div>\r\n\r\n</div></React.Fragment>\r\n\r\n};\r\nexport default Folder;","import React from 'react'\r\nimport './App.css'\r\nconst Bread = (props) =>{\r\nreturn(\r\n    \r\n    <div className=\"breadcrumb\">\r\n\r\n    {props.children}\r\n\r\n  </div>\r\n)\r\n}\r\nexport default Bread;","import React ,{ useState } from 'react'\nimport {BrowserRouter,Link,Route} from 'react-router-dom'\nimport NewFolder from './Newfolder'\nimport Folder from './folder/folder'\nimport './App.css';\nimport Bread from './breadcrumb'\nexport const Breadcontext = React.createContext({\n  bread:['/'],\n  setbread:()=>{}\n});\nfunction App() {\nconst [bread,setbread] = useState (['/']);\n\nconst value ={bread,setbread};\n\n\n  let links =[<Link to=\"/\">/Home</Link>];\n\n  links.push(<Link to= {`/${bread[1]}`} >/{bread[1]}</Link>)\n\n\n\n  return (\n    <BrowserRouter >\n    <React.Fragment>\n\n  <Bread>{links}</Bread>\n  <Breadcontext.Provider value={value}>\n     <Route path='/' exact component={NewFolder}/>\n     <Route path='/:fid' component={Folder}/>\n  </Breadcontext.Provider>\n\n\n   </React.Fragment>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}